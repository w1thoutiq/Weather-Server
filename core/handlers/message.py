from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery
from aiogram import Router, F, Bot
from sqlalchemy.exc import IntegrityError

from core.keyboards.inline import mark, menu, admin
from core.keyboards.reply import get_weather_button
from core.utils.other import get_weather
from core.database.Connector import Connector


router = Router()


@router.message(Command(commands=['start']))
async def cmd_start(message: Message, connector: Connector):
    try:
        await connector.add_in_user(
            telegram_id=message.from_user.id,
            username=message.from_user.username,
            status='member'
        )
    except IntegrityError:
        await connector.update_status(message.from_user.id, 'member')
    finally:
        await message.answer(
            f'–ü—Ä–∏–≤–µ—Ç, ***{message.from_user.first_name}*** üñê !\n'
            f'–Ø Telegram-–±–æ—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –≤ –ª—é–±–æ–º —Ä–µ–≥–∏–æ–Ω–µ. '
            f'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥, –∫–æ—Ç–æ—Ä—ã–µ —è –ø–æ–Ω–∏–º–∞—é, –ø—Ä–æ–ø–∏—à–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /help.',
            parse_mode='Markdown',
            reply_markup=mark())
        await message.answer(
            f'–ú–µ–Ω—é \U000026C5',
            reply_markup=menu(),
            disable_notification=False
        )


@router.callback_query(F.data == 'help')
@router.message(Command(commands=['help']))
async def cmd_help(message: Message | CallbackQuery, bot: Bot, connector: Connector):
    text = f'–Ø –ø–æ–Ω–∏–º–∞—é —ç—Ç–∏ –∫–æ–º–∞–Ω–¥—ã:\n'\
           f'/start\n/help\n/support\n/manage\n'\
           f'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –Ω–∞–ø–∏—à–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π —Ä–µ–≥–∏–æ–Ω.\n'\
           f'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã –≤ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω–æ–º —Ä–µ–≥–∏–æ–Ω–µ –Ω–∞–∂–º–∏ "–ø–æ–≥–æ–¥–∞"'
    await bot.send_message(message.from_user.id, text=text,
                           reply_markup=get_weather_button())
    await connector.update_status(message.from_user.id, 'member')
    try:
        await message.answer()
    except Exception:
        pass


@router.message(Command(commands=['manage']))
async def cmd_manage(message: Message):
    await message.answer(text=f'–ú–µ–Ω—é:', reply_markup=menu())


@router.message(Command(commands=['support']))
async def cmd_developer(message: Message, bot: Bot):
    await bot.send_message(
        message.chat.id,
        text='<strong>@w1thoutiq</strong>',
        reply_markup=admin(), parse_mode='HTML'
    )


@router.message(F.text.lower() == '–ø–æ–≥–æ–¥–∞')
async def weather(message: Message, connector: Connector):
    try:
        city = await connector.alert_city(message.from_user.id)
        await message.answer(text=get_weather(city))
    except TypeError:
        await message.answer("–ù–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã—Ö —Ä–µ–≥–∏–æ–Ω–æ–≤")


@router.message(F.text)
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±–æ–≥–æ —Ç–µ–∫—Å—Ç–∞, –µ—Å–ª–∏ –µ—Å—Ç—å –≥–æ—Ä–æ–¥, —Ç–æ–≥–¥–∞ –≤–µ—Ä–Ω–µ—Ç –ø–æ–≥–æ–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
async def unknown_message_text(message: Message):
    try:
        city = message.text.capitalize()
        await message.answer(
            text=get_weather(city),
            parse_mode='HTML'
        )
    except Exception:
        await message.reply(f'\U0001F915 –°—Ç—Ä–∞–Ω–∞ –∏–ª–∏ —Ä–µ–≥–∏–æ–Ω —É–∫–∞–∑–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ!')


@router.message()
# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ª—é–±–æ–≥–æ —Ç–∏–ø–∞ —Å–æ–æ–±—â–µ–Ω–∏–π, —á—Ç–æ-–±—ã –∏–∑–±–µ–∂–∞—Ç—å –ª–∏—à–Ω–∏—Ö –æ—à–∏–±–æ–∫
async def unknown_message(message: Message):
    await message.reply(f'–Ø –Ω–µ –∑–Ω–∞—é —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å, –Ω–æ –Ω–∞–ø–æ–º–∏–Ω–∞—é,\n'
                        f'—á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É /help',
                        parse_mode='Markdown', reply_markup=mark())
